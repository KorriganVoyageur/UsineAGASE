#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Tue Feb 15 13:25:19 2011

import wx
from wx.animate import AnimationCtrl, Animation
from threading import Thread, activeCount
from time import sleep
from classes.Validators import GenericTextValidator, VALIDATE_INT

import os
import smtplib
import urllib2
import config

from email.MIMEMultipart import MIMEMultipart
from email.MIMEBase import MIMEBase
from email.MIMEText import MIMEText
from email import Encoders

# begin wxGlade: extracode
# end wxGlade


class ConfigSMTP(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: GestionProduits.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)

        self.label_serveur = wx.StaticText(self, -1, "Serveur SMTP")
        self.tc_serveur = wx.TextCtrl(self, -1, "", validator=GenericTextValidator())
        self.label_port = wx.StaticText(self, -1, "Port")
        self.tc_port = wx.TextCtrl(self, -1, "", validator=GenericTextValidator(flag=VALIDATE_INT))
        self.label_securite = wx.StaticText(self, -1, "Cryptage")
        self.cb_securite = wx.ComboBox(self, -1, choices=["Aucun", "STARTTLS", "SSL/TLS"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.label_login = wx.StaticText(self, -1, "Login")
        self.tc_login = wx.TextCtrl(self, -1, "")
        self.label_mdp = wx.StaticText(self, -1, "Mot de passe")
        self.tc_mdp = wx.TextCtrl(self, -1, "", style=wx.TE_PASSWORD)
        self.bouton_test_serveur = wx.Button(self, -1, u"Tester les paramètres du Serveur")
        self.bouton_sauvegarder = wx.Button(self, -1, u"Sauvegarder la configuration SMTP")
        
        self.throbber = AnimationCtrl(self)
        self.throbber.SetAnimation(Animation("./icons/32x32/throbber6.gif"))
        self.throbber.Play()
        
        self.server = None
        self.thread = None

        self.__set_properties()
        self.__set_values()
        self.__do_layout()

        self.throbber.Hide()

        self.Bind(wx.EVT_BUTTON, self.OnTestServeur, self.bouton_test_serveur)
        self.Bind(wx.EVT_BUTTON, self.OnSauvegarde, self.bouton_sauvegarder)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.tc_serveur.SetMinSize((200, -1))
        self.cb_securite.SetSelection(0)
        self.bouton_sauvegarder.Disable()
        # end wxGlade
        
    def __set_values(self):
        self.tc_serveur.SetValue(config.PARAMETRES_ASSOCIATION.ServeurSMTP)
        self.tc_port.SetValue(str(config.PARAMETRES_ASSOCIATION.ServeurSMTPPort))
        self.cb_securite.SetSelection(config.PARAMETRES_ASSOCIATION.ServeurSecurite)
        self.tc_login.SetValue(config.PARAMETRES_ASSOCIATION.LoginSMTP)
        self.tc_mdp.SetValue(config.PARAMETRES_ASSOCIATION.MotDePasseSMTP)

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_haut = wx.BoxSizer(wx.HORIZONTAL)
        sizer_test = wx.BoxSizer(wx.VERTICAL)
        #sizer_boutons = wx.BoxSizer(wx.HORIZONTAL)
    
        grid_sizer = wx.FlexGridSizer(5, 2, 5, 10)
        grid_sizer.Add(self.label_serveur, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer.Add(self.tc_serveur, 0, 0, 0)
        grid_sizer.Add(self.label_port, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer.Add(self.tc_port, 0, wx.EXPAND, 0)
        grid_sizer.Add(self.label_securite, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer.Add(self.cb_securite, 0, wx.EXPAND, 0)
        grid_sizer.Add(self.label_login, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer.Add(self.tc_login, 0, wx.EXPAND, 0)
        grid_sizer.Add(self.label_mdp, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer.Add(self.tc_mdp, 0, wx.EXPAND, 0)
        
        sizer_haut.Add(grid_sizer, 0, wx.ALL|wx.EXPAND, 0)
        
        sizer_test.Add(self.bouton_test_serveur, 0, wx.BOTTOM, 10)
        sizer_test.Add(self.throbber, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        
        sizer_haut.Add(sizer_test, 0, wx.LEFT|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 10)

        sizer.Add(sizer_haut, 0, wx.ALL, 5)

        sizer.Add(self.bouton_sauvegarder, 0, wx.TOP|wx.BOTTOM|wx.ALIGN_CENTER_HORIZONTAL, 10)

        self.SetSizer(sizer)
        sizer.Fit(self)
        self.Layout()
        # end wxGlade
    
    #Permet de tester la connection internet
    def TestConnectionInternet(self):
        try:
            urllib2.urlopen("http://www.google.com/")
            return True
        except:
            return False
        
    def ConnectionServeur(self):
        if self.cb_securite.GetSelection() == 2:
            server = smtplib.SMTP_SSL(self.tc_serveur.GetValue(), int(self.tc_port.GetValue()))
        else:
            server = smtplib.SMTP(self.tc_serveur.GetValue(), int(self.tc_port.GetValue()))
            
        server.ehlo()

        if self.cb_securite.GetSelection() == 1:
            server.starttls()
            server.ehlo()

        server.login(self.tc_login.GetValue(), self.tc_mdp.GetValue())
        
        return server
        
    def TestConnectionServeur(self):
        if self.TestConnectionInternet():
            try:
                self.ConnectionServeur()

                self.throbber.Hide()
                self.bouton_sauvegarder.Enable()
                wx.MessageBox(u"La connection au serveur SMTP est valide", "Valide", wx.ICON_INFORMATION)
            
            except smtplib.SMTPAuthenticationError:
                self.bouton_sauvegarder.Disable()
                self.throbber.Hide()
                wx.MessageBox(u"Login ou mot de passe incorrect", "Erreur", wx.ICON_ERROR)
                
            except Exception as ex:
                self.bouton_sauvegarder.Disable()
                self.throbber.Hide()
                wx.MessageBox(u"Problème de connection au serveur SMTP\n\n %s" % ex, "Erreur", wx.ICON_ERROR)
        else:
            self.bouton_sauvegarder.Disable()
            self.throbber.Hide()
            wx.MessageBox(u"Problème de connection internet", "Erreur", wx.ICON_ERROR)

    def OnTestServeur(self, event):
        if self.Validate():
            self.throbber.Show()

            self.thread = Thread(target=self.TestConnectionServeur)
            
            self.thread.start()
            
    def OnSauvegarde(self, event):
        config.PARAMETRES_ASSOCIATION.ServeurSMTP = self.tc_serveur.GetValue()
        config.PARAMETRES_ASSOCIATION.ServeurSMTPPort = self.tc_port.GetValue()
        config.PARAMETRES_ASSOCIATION.ServeurSecurite = self.cb_securite.GetSelection()
        config.PARAMETRES_ASSOCIATION.LoginSMTP = self.tc_login.GetValue()
        config.PARAMETRES_ASSOCIATION.MotDePasseSMTP = self.tc_mdp.GetValue()
        
        config.PARAMETRES_ASSOCIATION.Sauvegarde()
        
        self.bouton_sauvegarder.Disable()
        
    def OnEmail(self, event):
        self.mail("herve.garnier@@@@@no-log.org",
       "Email de test",
       "Bla bla bla bla",
       "../../dernier_bon_imprime.pdf")